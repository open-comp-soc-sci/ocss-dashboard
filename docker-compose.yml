version: "3.8"
services:
  app:
    build:
      context: ./backend
      dockerfile: Dockerfile
    depends_on:
      - db
      - rabbitmq
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    env_file:
      - .env
    environment:
      FLASK_DEBUG: 1
      FLASK_SQLALCHEMY_DATABASE_URI: "postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@db:5432/${POSTGRES_DB}"
    command: ["./wait-for-db.sh", "db", "sh", "-c", "python create_tables.py && flask run -h 0.0.0.0"]

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "8001:8001"
    volumes:
      - ./frontend:/app
      - /usr/src/app/node_modules
    env_file:
      - .env

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - db_users:/var/lib/postgresql/data

  adminer:
    image: adminer
    ports:
      - "8089:8080"

  rabbitmq:
    image: rabbitmq:3-management
    environment:
      RABBITMQ_DEFAULT_USER: "user"
      RABBITMQ_DEFAULT_PASS: "password"
    ports:
      - "5672:5672"   # AMQP connection port
      - "15672:15672" # Management interface port

volumes:
  db_users:
